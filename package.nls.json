{
    "extension.description": "Linting support for Python files using Flake8.",
    "command.restartServer": "Restart Server",
    "settings.args.description": "Arguments passed to Flake8 for linting Python files. Each argument should be provided as a separate string in the array. \n Examples:  \n- `\"flake8.args\": [\"--rcfile=<file>\"]` \n - `\"flake8.args\": [\"--disable=C0111\", \"--max-line-length=120\"]`",
    "settings.cwd.description": "Sets the current working directory used to lint Python files with Flake8. By default, it uses the root directory of the workspace `${workspaceFolder}`. You can set it to `${fileDirname}` to use the parent folder of the file being linted as the working directory for Flake8.",
    "settings.enabled.description": "Whether to enable or disable linting Python files using Flake8.",
    "settings.severity.description": "Mapping of Flake8's message types to VS Code's diagnostic severity levels as displayed in the Problems window. You can also use it to override specific Flake8 error codes. \n Example:</br> `{\"convention\": \"Information\", \"error\": \"Error\", \"fatal\": \"Error\", \"refactor\": \"Hint\", \"warning\": \"Warning\", \"W0611\": \"Error\", \"undefined-variable\": \"Warning\"}`",
    "settings.path.description": "Path or command to be used by the extension to lint Python files with Flake8. Accepts an array of a single or multiple strings. If passing a command, each argument should be provided as a separate string in the array. If set to `[\"flake8\"]`, it will use the version of Flake8 available in the `PATH` environment variable. Note: Using this option may slowdown linting. \nExamples: \n- `[\"~/global_env/flake8\"]` \n- `[\"conda\", \"run\", \"-n\", \"lint_env\", \"python\", \"-m\", \"flake8\"]` \n `[\"flake8\"]`",
    "settings.ignorePatterns.description": "Configure [glob patterns](https://docs.python.org/3/library/fnmatch.html) as supported by the fnmatch Python library to exclude files or folders from being linted with Flake8.",
    "settings.importStrategy.description": "Defines which Flake8 binary to be used to lint Python files. When set to `useBundled`, the extension will use the Flake8 binary that is shipped with the extension. When set to `fromEnvironment`, the extension will attempt to use the Flake8 binary and all dependencies that are available in the currently selected environment. Note: If the extension can't find a valid Flake8 binary in the selected environment, it will fallback to using the Flake8 binary that is shipped with the extension The `flake8.path` setting may also be ignored when this setting is set to `fromEnvironment`.",
    "settings.importStrategy.useBundled.description": "Always use the bundled version of Flake8 shipped with the extension.",
    "settings.importStrategy.fromEnvironment.description": "Use Flake8 from the selected environment. If the extension fails to find a valid Flake8 binary, it will fallback to using the bundled version of Flake8.",
    "settings.interpreter.description": "Path to a Python executable or a command that will be used to launch the Flake8 server and any subprocess. Accepts an array of a single or multiple strings.  When set to `[]`, the extension will use the path to the selected Python interpreter. If passing a command, each argument should be provided as a separate string in the array.",
    "settings.showNotifications.description": "Controls when notifications are shown by this extension.  Accepted values are `onError`, `onWarning`, `always` and `off`.",
    "settings.showNotifications.off.description": "Never display a notification. Any errors or warning are still available in the logs.",
    "settings.showNotifications.onError.description": "Show notifications for errors.",
    "settings.showNotifications.onWarning.description": "Show notifications for errors and warnings.",
    "settings.showNotifications.always.description": "Show all notifications."
}
